name: Draw ZMK keymaps
on:
  workflow_dispatch:
  push:
    paths:
      - 'config/**/*.keymap'
      - 'config/**/*.dtsi'
      - keymap-drawer/config.yaml
      - .github/workflows/draw-keymaps.yml

jobs:
  draw:
    runs-on: ubuntu-latest
    outputs:
      drawings: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    env:
      keymap_patterns: "config/*.keymap"
      config_path: keymap-drawer/config.yaml
      output_folder: keymap-drawer
      draw_args: "ergonaut_one:'-k corne_rotated -l LAYOUT_split_3x6_3'"
      json_path: keymap-drawer/layouts
      west_config_path: './config/'
      amend_commit: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # So the reference to the parent commit is available when amending
          # See:
          # - https://github.com/stefanzweifel/git-auto-commit-action#using---amend-and---no-edit-as-commit-options
          # - https://github.com/stefanzweifel/git-auto-commit-action/issues/159#issuecomment-845347950
          # - https://github.com/actions/checkout
          fetch-depth: $(amend_commit == true && 2) || 1
          submodules: recursive

      - name: Install keymap-drawer (pypi)
        run: python3 -m pip install keymap-drawer --break-system-packages

      - name: Install west
        run: python3 -m pip install west

      - name: Cache west modules
        uses: actions/cache@v4
        continue-on-error: true
        env:
          cache_name: cache-zephyr-3.5.0-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache_name }}-${{ hashFiles('**/west.yml', '**/build.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache_name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: West Init
        run: west init -l $west_config_path

      - name: West Update
        run: west update

      - name: Draw keymaps
        id: draw
        run: |
          get_args() {
              local keyboard=$2
              eval set -- "$1"
              for arg; do
                  local key=${arg%%:*}
                  local val=${arg#*:}
                  if [ "$key" = "$keyboard" ]; then
                      echo "$val"
                      break
                  fi
              done
          }

          declare -a DRAWINGS
          error_occurred=0
          mkdir -p "$output_folder"

          [ -e "$config_path" ] && config_arg=(-c "$config_path") || config_arg=()
          echo "INFO: using config args: ${config_arg[@]}"
          for keymap_file in $keymap_patterns; do
              keyboard=$(basename -s .keymap "$keymap_file")
              echo "INFO: drawing for $keyboard"

              parse_args=$(get_args "$parse_args" "$keyboard")
              echo "INFO:   got extra parse args: $parse_args"
              draw_args=$(get_args "$draw_args" "$keyboard")
              echo "INFO:   got extra draw args: $draw_args"

              if [ -f "$json_path/${keyboard}.json" ]; then
                  echo "INFO:   found $json_path/${keyboard}.json";
                  draw_args+=" -j $json_path/${keyboard}.json"
              fi

              keymap "${config_arg[@]}" parse -z "$keymap_file" $parse_args >"$output_folder/$keyboard.yaml" \
              && keymap "${config_arg[@]}" draw "$output_folder/$keyboard.yaml" $draw_args >"$output_folder/$keyboard.svg" \
              || {
                  echo "ERROR: parsing or drawing failed for $keyboard!"
                  error_occurred=1
              }
              DRAWINGS+=(\"$output_folder/$keyboard.yaml\" \"$output_folder/$keyboard.svg\")
          done
          IFS=','
          echo "DRAWINGS=[${DRAWINGS[*]}]" >> $GITHUB_OUTPUT
          unset IFS

          if [ "$fail_on_error" == "true" ] && [ $error_occurred -eq 1 ]; then
              exit 1
          fi

      - name: Get last commit message
        id: last_commit_message
        run: |
          echo "msg=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT

      - name: Commit updated images
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: '$output_folder/*.svg $output_folder/*.yaml'
          # So the previous commit is amended instead of creating a new one when desired
          # See:
          # - https://github.com/stefanzweifel/git-auto-commit-action#using---amend-and---no-edit-as-commit-options
          # - https://github.com/stefanzweifel/git-auto-commit-action/issues/159#issuecomment-845347950
          # - https://github.com/actions/checkout
          commit_message: "$(amend_commit == true && steps.last_commit_message.outputs.msg) || commit_message'"
          commit_options: "$(amend_commit == true && '--amend --no-edit') || ''"
          push_options: "$(amend_commit == true && '--force-with-lease') || ''"
          skip_fetch: $inputs.amend_commit == true

      - name: Artifact upload
        id: artifact-upload-step
        uses: actions/upload-artifact@v4
        with:
          name: '$artifact_name'
          path: |
            ${{ join(fromJSON(steps.draw.outputs.DRAWINGS), '
            ') }}
